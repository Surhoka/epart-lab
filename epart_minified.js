document.addEventListener('DOMContentLoaded',function(){function safeAddClass(element,...classNames){if(element&&element.classList){element.classList.add(...classNames)}}
const customToast=document.getElementById('customToast');const toastMessage=document.getElementById('toastMessage');let toastTimeout;function showMessageBox(message){if(customToast&&toastMessage){clearTimeout(toastTimeout);toastMessage.textContent=message;customToast.style.display='block';customToast.classList.add('show');toastTimeout=setTimeout(()=>{customToast.classList.remove('show');setTimeout(()=>{customToast.style.display='none'},400)},3000)}}
const contentCache={};async function preloadContent(url){if(contentCache[url]||contentCache[url]===null){return}
contentCache[url]=null;try{const absoluteUrl=new URL(url,window.location.origin).href;console.log(`üöÄ Preloading content for: ${absoluteUrl}`);const response=await fetch(absoluteUrl);if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`)}
const html=await response.text();contentCache[url]=html;console.log(`‚úÖ Preloaded: ${absoluteUrl}`)}catch(error){console.error(`‚ùå Failed to preload ${url}:`,error);delete contentCache[url]}}
function createNestedMenu(items,startIndex,currentLevel){const currentLevelUl=document.createElement('ul');let i=startIndex;while(i<items.length){const item=items[i];const itemName=item.name.trim();const leadingUnderscores=(itemName.match(/^_+/)||[''])[0].length;const cleanName=itemName.replace(/^_+/,'');console.log(`üìå [createMenu] Level: ${currentLevel}, Item: "${cleanName}", Underscores: ${leadingUnderscores}`);if(leadingUnderscores===currentLevel){const li=document.createElement('li');const isTopLevel=currentLevel===0;safeAddClass(li,'relative',`depth-${currentLevel}`,'group',...(isTopLevel?['w-full','md:w-auto']:['w-full']));const anchor=document.createElement('a');anchor.href=item.target;anchor.textContent=cleanName;safeAddClass(anchor,'main-menu-item');anchor.addEventListener('mouseenter',()=>preloadContent(item.target));const nextItem=items[i+1];const nextLevel=nextItem&&(nextItem.name.trim().match(/^_+/)||[''])[0].length;if(nextLevel>currentLevel){safeAddClass(anchor,'flex','items-center','justify-between','dropdown-toggle');const arrow=document.createElementNS('http://www.w3.org/2000/svg','svg');arrow.setAttribute('class','w-4 h-4 ml-1 transform transition-transform duration-200 dropdown-arrow');arrow.setAttribute('fill','none');arrow.setAttribute('stroke','currentColor');arrow.setAttribute('viewBox','0 0 24 24');const path=document.createElementNS('http://www.w3.org/2000/svg','path');path.setAttribute('stroke-linecap','round');path.setAttribute('stroke-linejoin','round');path.setAttribute('stroke-width','2');path.setAttribute('d','M19 9l-7 7-7-7');arrow.appendChild(path);anchor.appendChild(arrow);li.appendChild(anchor);const nested=createNestedMenu(items,i+1,currentLevel+1);const subUl=nested.ul;safeAddClass(subUl,`depth-${currentLevel + 1}`,'py-2','w-full');safeAddClass(subUl,currentLevel===0?'dropdown-menu':'dropdown-submenu');li.appendChild(subUl);anchor.addEventListener('click',(e)=>{e.preventDefault();li.classList.toggle('show-dropdown')});i=nested.nextIndex-1}else{li.appendChild(anchor)}
currentLevelUl.appendChild(li);i++}else if(leadingUnderscores<currentLevel){console.log(`‚Ü© [createMenu] Returning from level ${currentLevel} to ${leadingUnderscores}.`);break}else{console.warn(`‚ú≥ Menu "${itemName}" skips a level. Skipping.`);i++}}
return{ul:currentLevelUl,nextIndex:i}}
const buildTree=(links)=>{const tree=[];const parents=[];links.forEach(raw=>{const depth=(raw.name.trim().match(/^_+/)||[''])[0].length;const name=raw.name.replace(/^_*/,'');const node={name:name,href:raw.target,children:[]};if(depth===0){tree.push(node);parents[0]=node}else{const parent=parents[depth-1];if(parent){parent.children.push(node);parents[depth]=node}else{console.warn(`‚ö†Ô∏è Item "${name}" (depth ${depth}) has no corresponding parent.`)}}});return tree};const mobileMenuButtonInNav=document.getElementById('mobile-menu-button-in-nav');const mainMenuNav=document.getElementById('main-menu-nav');const initialLinks=Array.from(mainMenuNav.children).map(li=>{const anchor=li.querySelector('a');return{name:anchor?anchor.getAttribute('data-original-name')||anchor.textContent.trim():'',target:anchor?anchor.href:'#',element:li}}).filter(link=>link.name);console.log('Initial Links from b:loop (main-menu-nav):',initialLinks);while(mainMenuNav.firstChild){mainMenuNav.removeChild(mainMenuNav.firstChild)}
if(initialLinks.length){const finalMenuUlContent=createNestedMenu(initialLinks,0,0).ul;while(finalMenuUlContent.firstChild){mainMenuNav.appendChild(finalMenuUlContent.firstChild)}
console.log('Main menu rendered (desktop and mobile structure).')}else{console.log('No initial links found to render menus. Please check your Blogger LinkList widget settings.')}
if(mobileMenuButtonInNav&&mainMenuNav){mobileMenuButtonInNav.addEventListener('click',function(){mainMenuNav.classList.toggle('show')})}
document.addEventListener('click',function(e){if(mainMenuNav&&mainMenuNav.classList.contains('show')&&!mainMenuNav.contains(e.target)&&e.target!==mobileMenuButtonInNav){mainMenuNav.classList.remove('show')}
document.querySelectorAll('.group.show-dropdown').forEach(liWithDropdown=>{const dropdownMenu=liWithDropdown.querySelector('.dropdown-menu, .dropdown-submenu');const dropdownToggle=liWithDropdown.querySelector('.dropdown-toggle');if(dropdownMenu&&!liWithDropdown.contains(e.target)){liWithDropdown.classList.remove('show-dropdown')}})});const vehicleCategorySelect=document.getElementById('vehicleCategorySelect');const linkList2Data=document.querySelector('#LinkList2 .widget-content ul');const mainContentSection=document.getElementById('main-content-section');const promoGallerySection=document.getElementById('PromoGallery');function populateVehicleCategoryDropdown(){if(linkList2Data&&vehicleCategorySelect){vehicleCategorySelect.innerHTML='<option value="">Pilih Model Kendaraan</option>';const categoryLinks=Array.from(linkList2Data.querySelectorAll('li a'));categoryLinks.forEach(link=>{const categoryName=link.textContent.trim();const categoryUrl=link.href;if(categoryName){const option=document.createElement('option');option.value=categoryUrl;option.textContent=categoryName;vehicleCategorySelect.appendChild(option)}});const currentPath=window.location.pathname+window.location.search;const selectedOption=Array.from(vehicleCategorySelect.options).find(option=>option.value===currentPath);if(selectedOption){selectedOption.selected=!0}}else{console.warn('WARNING: LinkList2 data element or vehicleCategorySelect dropdown not found to populate vehicle categories.')}}
async function loadContentForUrl(url,pushState=!0){console.log(`Loading content for URL: ${url}`);try{const postsWrapper=mainContentSection.querySelector('.posts-wrapper');if(!postsWrapper){console.error("Error: .posts-wrapper not found in main-content-section.");mainContentSection.innerHTML=`
                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                    <strong class="font-bold">Error!</strong>
                    <span class="block sm:inline">Struktur konten utama tidak ditemukan.</span>
                </div>
              `;return}
postsWrapper.innerHTML=`
            <div class="text-center py-8 text-gray-600">
                <i class="fas fa-spinner fa-spin text-2xl mb-4"></i>
                <p>Memuat konten...</p>
            </div>
          `;const isHomePage=url==='/'||url===window.location.origin+'/';if(promoGallerySection){if(isHomePage){promoGallerySection.style.display='grid'}else{promoGallerySection.style.display='none'}}
let newPageTitle=document.title;let fetchedHtmlContent=null;if(contentCache[url]){fetchedHtmlContent=contentCache[url];console.log(`‚úÖ Using cached content for: ${url}`);delete contentCache[url]}else{const absoluteUrl=new URL(url,window.location.origin).href;const response=await fetch(absoluteUrl);if(!response.ok){throw new Error(`HTTP error! status: ${response.status} from ${absoluteUrl}`)}
fetchedHtmlContent=await response.text();console.log(`‚¨áÔ∏è Fetched fresh content for: ${url}`)}
const parser=new DOMParser();const doc=parser.parseFromString(fetchedHtmlContent,'text/html');if(isHomePage){postsWrapper.innerHTML='';newPageTitle='<data:blog.title/>'}else{const newPostsWrapper=doc.querySelector('#main-content-section .posts-wrapper');if(newPostsWrapper){const fragment=document.createDocumentFragment();while(newPostsWrapper.firstChild){fragment.appendChild(newPostsWrapper.firstChild)}
postsWrapper.innerHTML="";postsWrapper.appendChild(fragment)}else{postsWrapper.innerHTML=`
                      <div class="bg-blue-50 border border-blue-200 rounded p-3 text-blue-600 text-sm">
                          Konten tidak tersedia atau tidak dapat dimuat.
                      </div>
                  `}
newPageTitle=doc.querySelector('title')?.textContent||newPageTitle}
document.title=newPageTitle;if(pushState){history.pushState({path:url,title:newPageTitle},newPageTitle,url)}
if(vehicleCategorySelect){const selectedOption=Array.from(vehicleCategorySelect.options).find(option=>option.value===url);if(selectedOption){selectedOption.selected=!0}else{vehicleCategorySelect.value=''}}
refreshSPAContent();console.log(`Content loaded for ${url}. Page title updated to: ${document.title}`)}catch(error){console.error('Error loading content:',error);if(mainContentSection){const postsWrapper=mainContentSection.querySelector('.posts-wrapper');if(postsWrapper){postsWrapper.innerHTML=`
                    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                        <strong class="font-bold">Error!</strong>
                        <span class="block sm:inline">Gagal memuat konten: ${error.message}.</span>
                        <span class="block sm:inline">Coba muat ulang halaman.</span>
                    </div>
                  `}else{mainContentSection.innerHTML=`
                    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                        <strong class="font-bold">Error!</strong>
                        <span class="block sm:inline">Gagal memuat konten: ${error.message}.</span>
                        <span class="block sm:inline">Coba muat ulang halaman.</span>
                    </div>
                  `}}}}
if(vehicleCategorySelect){vehicleCategorySelect.addEventListener('change',function(){const selectedUrl=this.value;if(selectedUrl){loadContentForUrl(selectedUrl)}else{loadContentForUrl('/')}})}
window.addEventListener('popstate',function(event){console.log('Popstate event triggered. State:',event.state);loadContentForUrl(document.location.href,!1)});document.addEventListener('DOMContentLoaded',function(){console.log('DOM Content Loaded. Initial pageType:','<data:blog.pageType/>');const currentPath=window.location.pathname+window.location.search;loadContentForUrl(currentPath,!1)});populateVehicleCategoryDropdown();const openEstimasiModalBtn=document.getElementById('openEstimasiModal');if(openEstimasiModalBtn){const estimasiModal=document.getElementById('estimasiModal');const closeEstimasiModalBtn=document.getElementById('closeEstimasiModal');const estimasiTableBody=document.getElementById('estimasiTableBody');const estimasiModalContent=document.getElementById('estimasiModalContent');const headerTableWrapper=document.querySelector('.header-table-wrapper');const bodyTableWrapper=document.querySelector('.body-table-wrapper');const downloadPdfBtn=document.getElementById('downloadPdfBtn');let newPartKodePartInput;let newPartDeskripsiInput;let newPartQtyInput;let newPartHargaInput;let addPartBtn;const openKirimEstimasiModalBtn=document.getElementById('openKirimEstimasiModalBtn');const kirimEstimasiModal=document.getElementById('kirimEstimasiModal');const closeKirimEstimasiModalBtn=document.getElementById('closeKirimEstimasiModal');const estimasiForm=document.getElementById('estimasiForm');let estimasiItems=[];function loadEstimasiFromLocalStorage(){const storedData=localStorage.getItem('estimasiData');if(storedData){try{estimasiItems=JSON.parse(storedData)}catch(e){console.error("Error parsing estimasi data from localStorage:",e);estimasiItems=[]}}else{}}
function saveEstimasiToLocalStorage(){localStorage.setItem('estimasiData',JSON.stringify(estimasiItems))}
function addEstimasiItem(newItem,isIncrement=!0){if(!newItem||!newItem.kodePart||!newItem.deskripsi||!newItem.qty||!newItem.harga){console.warn("Data item tidak lengkap:",newItem);return}
const kodeBaru=newItem.kodePart.trim().toUpperCase();const deskripsiBaru=newItem.deskripsi.trim();const qtyBaru=newItem.qty;const hargaBaru=newItem.harga;const existingIndex=estimasiItems.findIndex(item=>item.kodePart.trim().toUpperCase()===kodeBaru&&item.deskripsi.trim()===deskripsiBaru);if(existingIndex!==-1){if(isIncrement){estimasiItems[existingIndex].qty+=qtyBaru;showMessageBox(`Qty untuk part '${deskripsiBaru}' ditambahkan jadi ${estimasiItems[existingIndex].qty}x`)}else{estimasiItems[existingIndex].qty-=qtyBaru;if(estimasiItems[existingIndex].qty<=0){const removedItem=estimasiItems.splice(existingIndex,1);showMessageBox(`Part '${deskripsiBaru}' (${kodeBaru}) dihapus dari keranjang.`)}else{showMessageBox(`Qty untuk part '${deskripsiBaru}' dikurangi jadi ${estimasiItems[existingIndex].qty}x`)}}}else if(isIncrement){estimasiItems.push({kodePart:kodeBaru,deskripsi:deskripsiBaru,qty:qtyBaru,harga:hargaBaru});showMessageBox(`Part '${deskripsiBaru}' (${kodeBaru}) ditambahkan ke keranjang dengan ${qtyBaru}x`)}else{showMessageBox(`Part '${deskripsiBaru}' (${kodeBaru}) tidak ditemukan di keranjang.`)}
saveEstimasiToLocalStorage();renderEstimasiTable()}
function renderEstimasiTable(){const estimasiTableBody=document.getElementById('estimasiTableBody');if(!estimasiTableBody)return;estimasiTableBody.innerHTML='';let totalBelanja=0;let totalQuantity=0;estimasiItems.forEach((item,index)=>{const jumlah=item.qty*item.harga;totalBelanja+=jumlah;totalQuantity+=item.qty;const row=document.createElement('tr');row.innerHTML=`
                <td class="py-2 px-4 text-center">${index + 1}</td>
                <td class="py-2 px-4 text-center">${item.kodePart}</td>
                <td class="py-2 px-4 deskripsi-cell" title="${item.deskripsi}">${item.deskripsi}</td>
                <td class="py-2 px-4 text-center">
                    <div class="inline-flex items-center justify-center relative">
                        <input type="number" class="qty-input-table w-16 text-center" value="${item.qty}" min="1" data-index="${index}" />
                        <div class="absolute right-0 flex flex-col">
                            <button class="qty-btn-up text-blue-600 hover:text-blue-800 text-xs p-0" data-index="${index}">+</button>
                            <button class="qty-btn-down text-blue-600 hover:text-blue-800 text-xs p-0" data-index="${index}">-</button>
                        </div>
                    </div>
                </td>
                <td class="py-2 px-4 text-right">
                    <input type="text" class="price-input-table" value="Rp ${item.harga.toLocaleString('id-ID')}" data-index="${index}" />
                </td>
                <td class="py-2 px-4 text-right">Rp ${jumlah.toLocaleString('id-ID')}</td>
                <td class="py-2 px-4 text-center">
                    <button class="delete-item-btn text-gray-500 hover:text-red-600 transition duration-200" title="Hapus" data-index="${index}">
                        <i class="fas fa-trash-alt text-lg"></i>
                    </button>
                </td>
            `;estimasiTableBody.appendChild(row)});const newPartRow=document.createElement('tr');newPartRow.classList.add('estimasi-input-row');newPartRow.innerHTML=`
            <td class="text-center text-gray-400">#</td>
            <td><input type="text" id="newPartKodePart" placeholder="Kode Part" /></td>
            <td><input type="text" id="newPartDeskripsi" placeholder="Deskripsi" readonly /></td> <!-- Added readonly here -->
            <td><input type="number" id="newPartQty" placeholder="Qty" value="1" min="1" /></td>
            <td><input type="text" id="newPartHarga" placeholder="Harga" /></td>
            <td class="text-center text-gray-400">Auto</td>
            <td class="text-center">
                <button id="addPartBtn" class="bg-blue-500 hover:bg-blue-600 text-white">
                    <i class="fas fa-plus"></i>
                </button>
            </td>
        `;estimasiTableBody.appendChild(newPartRow);newPartKodePartInput=document.getElementById('newPartKodePart');newPartDeskripsiInput=document.getElementById('newPartDeskripsi');newPartQtyInput=document.getElementById('newPartQty');newPartHargaInput=document.getElementById('newPartHarga');addPartBtn=document.getElementById('addPartBtn');if(addPartBtn){addPartBtn.onclick=function(){const kodePart=newPartKodePartInput.value.trim();const deskripsi=newPartDeskripsiInput.value.trim();const qty=parseInt(newPartQtyInput.value,10);const hargaStr=newPartHargaInput.value.replace(/[^0-9]/g,'');const harga=parseInt(hargaStr,10);if(kodePart&&deskripsi&&!isNaN(qty)&&qty>0&&!isNaN(harga)&&harga>=0){const newItem={kodePart:kodePart,deskripsi:deskripsi,qty:qty,harga:harga};addEstimasiItem(newItem,!0);newPartKodePartInput.value='';newPartDeskripsiInput.value='';newPartQtyInput.value='1';newPartHargaInput.value=''}else{showMessageBox('Mohon lengkapi semua kolom input part baru dengan benar (Kode Part, Deskripsi, Qty > 0, Harga >= 0).')}}}
if(newPartKodePartInput){newPartKodePartInput.addEventListener('change',async function(){const kodePart=this.value.trim().toUpperCase();if(kodePart){const sheetURL="https://opensheet.elk.sh/1AlEA83WkT1UyXnnbPBxbXgPhdNUiCP_yarCIk_RhN5o/PartMaster";try{const res=await fetch(sheetURL);if(!res.ok){throw new Error(`Failed to fetch sheet: ${res.status}`)}
const data=await res.json();const foundPart=data.find(row=>row.kodepart?.toUpperCase()===kodePart);if(foundPart){newPartDeskripsiInput.value=foundPart.deskripsi||'';newPartHargaInput.value=`Rp ${parseInt(foundPart.harga || 0, 10).toLocaleString('id-ID')}`;showMessageBox(`Part '${foundPart.deskripsi}' ditemukan.`)}else{newPartDeskripsiInput.value='';newPartHargaInput.value='';showMessageBox(`Kode Part '${kodePart}' tidak ditemukan.`)}}catch(error){console.error("Error fetching part data:",error);showMessageBox(`Gagal mencari kode part: ${error.message}`)}}else{newPartDeskripsiInput.value='';newPartHargaInput.value=''}})}
if(newPartHargaInput){newPartHargaInput.onblur=function(){const value=this.value.replace(/[^0-9]/g,'');if(value){this.value=`Rp ${parseInt(value, 10).toLocaleString('id-ID')}`}};newPartHargaInput.onfocus=function(){this.value=this.value.replace(/[^0-9]/g,'')}}
const totalRow=document.createElement('tr');totalRow.innerHTML=`
            <td colspan="5" class="py-2 px-4 border-t border-gray-200 text-right font-semibold">Total:</td>
            <td class="py-2 px-4 border-t border-gray-200 text-right font-semibold">Rp ${totalBelanja.toLocaleString('id-ID')}</td>
            <td class="py-2 px-4 border-t border-gray-200 text-sm"></td>
        `;estimasiTableBody.appendChild(totalRow);document.querySelectorAll('.qty-input-table').forEach(input=>{input.addEventListener('change',e=>{const newQty=parseInt(e.target.value,10);const idx=parseInt(e.target.dataset.index);if(!isNaN(newQty)&&newQty>0&&idx>=0&&idx<estimasiItems.length){estimasiItems[idx].qty=newQty;saveEstimasiToLocalStorage();renderEstimasiTable();showMessageBox(`Qty untuk '${estimasiItems[idx].deskripsi}' diperbarui jadi ${newQty}x`)}else{if(newQty<=0&&idx>=0&&idx<estimasiItems.length){const namaItem=estimasiItems[idx].deskripsi;estimasiItems.splice(idx,1);showMessageBox(`Part '${namaItem}' telah dihapus dari keranjang.`)}else{showMessageBox(`Qty tidak valid. Masukkan angka lebih dari 0.`);e.target.value=estimasiItems[idx].qty}}})});document.querySelectorAll('.price-input-table').forEach(input=>{input.addEventListener('change',e=>{const newPriceString=e.target.value.replace(/[^0-9]/g,'');const newPrice=parseInt(newPriceString,10);const idx=parseInt(e.target.dataset.index);if(!isNaN(newPrice)&&newPrice>=0&&idx>=0&&idx<estimasiItems.length){estimasiItems[idx].harga=newPrice;saveEstimasiToLocalStorage();renderEstimasiTable();showMessageBox(`Harga untuk '${estimasiItems[idx].deskripsi}' diperbarui jadi Rp ${newPrice.toLocaleString('id-ID')}`)}else{showMessageBox(`Harga tidak valid. Masukkan angka yang benar.`);e.target.value=`Rp ${estimasiItems[idx].harga.toLocaleString('id-ID')}`}})});document.querySelectorAll('.delete-item-btn').forEach(btn=>{btn.addEventListener('click',e=>{let idx=parseInt(e.target.dataset.index);if(isNaN(idx)){const parentButton=e.target.closest('button');if(parentButton){idx=parseInt(parentButton.dataset.index)}}
if(idx>=0&&idx<estimasiItems.length){const namaItem=estimasiItems[idx].deskripsi;estimasiItems.splice(idx,1);saveEstimasiToLocalStorage();renderEstimasiTable();showMessageBox(`Item '${namaItem}' telah dihapus dari estimasi.`)}})});document.querySelectorAll('.qty-btn-up').forEach(btn=>{btn.addEventListener('click',e=>{const idx=parseInt(e.target.dataset.index||e.target.closest('button').dataset.index);if(idx>=0&&idx<estimasiItems.length){estimasiItems[idx].qty++;saveEstimasiToLocalStorage();renderEstimasiTable();showMessageBox(`Qty untuk '${estimasiItems[idx].deskripsi}' ditambahkan jadi ${estimasiItems[idx].qty}x`)}})});document.querySelectorAll('.qty-btn-down').forEach(btn=>{btn.addEventListener('click',e=>{const idx=parseInt(e.target.dataset.index||e.target.closest('button').dataset.index);if(idx>=0&&idx<estimasiItems.length){estimasiItems[idx].qty--;if(estimasiItems[idx].qty<=0){const namaItem=estimasiItems[idx].deskripsi;estimasiItems.splice(idx,1);showMessageBox(`Item '${namaItem}' telah dihapus dari estimasi.`)}else{showMessageBox(`Qty untuk '${estimasiItems[idx].deskripsi}' dikurangi jadi ${estimasiItems[idx].qty}x`)}
saveEstimasiToLocalStorage();renderEstimasiTable()}})});const estimasiQtyBadge=document.getElementById('estimasiQtyBadge');if(estimasiQtyBadge){estimasiQtyBadge.textContent=totalQuantity.toString();if(totalQuantity>0){estimasiQtyBadge.classList.add('show-badge')}else{estimasiQtyBadge.classList.remove('show-badge')}}
const estimasiPriceBadge=document.getElementById('estimasiPriceBadge');if(estimasiPriceBadge){estimasiPriceBadge.textContent=`Rp ${totalBelanja.toLocaleString('id-ID')}`;if(totalBelanja>0){estimasiPriceBadge.classList.add('show-badge')}else{estimasiPriceBadge.classList.remove('show-badge')}}}
function deleteEstimasiItem(index){if(index>-1&&index<estimasiItems.length){const deletedItem=estimasiItems.splice(index,1);showMessageBox(`Part '${deletedItem[0].deskripsi}' dihapus dari keranjang.`);saveEstimasiToLocalStorage();renderEstimasiTable()}}
function generatePdf(){const{jsPDF}=window.jspdf;const doc=new jsPDF();const columns=[{header:'No',dataKey:'no'},{header:'Kode Part',dataKey:'kodePart'},{header:'Deskripsi',dataKey:'deskripsi'},{header:'Qty',dataKey:'qty'},{header:'Harga (Rp)',dataKey:'harga'},{header:'Jumlah (Rp)',dataKey:'jumlah'}];const data=estimasiItems.map((item,index)=>{const jumlah=item.qty*item.harga;return{no:index+1,kodePart:item.kodePart,deskripsi:item.deskripsi,qty:item.qty,harga:item.harga.toLocaleString('id-ID'),jumlah:jumlah.toLocaleString('id-ID')}});let totalBelanja=0;estimasiItems.forEach(item=>{totalBelanja+=item.qty*item.harga});doc.setFontSize(18);doc.text("Daftar Estimasi Sparepart",105,20,null,null,"center");doc.autoTable({startY:30,head:[columns.map(col=>col.header)],body:data.map(row=>columns.map(col=>row[col.dataKey])),theme:'striped',styles:{fontSize:8,cellPadding:2,valign:'middle',halign:'left'},headStyles:{fillColor:[0,51,102],textColor:[255,255,255],fontStyle:'bold',halign:'center'},columnStyles:{0:{halign:'center',cellWidth:10},1:{halign:'center',cellWidth:25},2:{halign:'left',cellWidth:60},3:{halign:'center',cellWidth:15},4:{halign:'right',cellWidth:25},5:{halign:'right',cellWidth:30}},didDrawPage:function(data){let str="Halaman "+doc.internal.getNumberOfPages();doc.setFontSize(10);doc.text(str,data.settings.margin.left,doc.internal.pageSize.height-10)}});const finalY=doc.autoTable.previous.finalY;doc.setFontSize(10);doc.text(`Total Belanja: Rp ${totalBelanja.toLocaleString('id-ID')}`,doc.internal.pageSize.width-doc.internal.pageSize.width/4,finalY+10,null,null,"right");doc.save('estimasi_belanja.pdf');showMessageBox('Daftar estimasi Anda telah diunduh sebagai PDF!')}
if(estimasiModal&&closeEstimasiModalBtn&&estimasiTableBody&&estimasiModalContent&&headerTableWrapper&&bodyTableWrapper&&downloadPdfBtn&&openKirimEstimasiModalBtn&&kirimEstimasiModal&&closeKirimEstimasiModalBtn&&estimasiForm){console.log('Modal elements found. Attaching event listeners.');loadEstimasiFromLocalStorage();renderEstimasiTable();openEstimasiModalBtn.addEventListener('click',async function(){console.log('Open button clicked. Modal classList BEFORE:',estimasiModal.classList.value);estimasiModal.classList.remove('hidden');document.body.classList.add('modal-open');console.log('Modal classList AFTER remove hidden:',estimasiModal.classList.value);const modalContentHeight=estimasiModalContent.offsetHeight;const modalTitleHeight=estimasiModalContent.querySelector('h3').offsetHeight;const buttonContainerHeight=estimasiModalContent.querySelector('.mt-4.flex.justify-end.gap-2').offsetHeight;const gap=15;const headerTableHeight=headerTableWrapper.offsetHeight;const spaceTaken=modalTitleHeight+headerTableHeight+(3*gap);const availableHeightForBodyTable=modalContentHeight-spaceTaken;bodyTableWrapper.style.maxHeight=`${availableHeightForBodyTable}px`;bodyTableWrapper.style.height='auto';const headerCols=headerTableWrapper.querySelectorAll('col');const bodyCols=bodyTableWrapper.querySelectorAll('col');headerCols.forEach((col,i)=>{const width=window.getComputedStyle(col).width;if(bodyCols[i]){bodyCols[i].style.width=width;bodyCols[i].style.minWidth=width;bodyCols[i].style.maxWidth=width}});try{const fetchedEstimasi=await ambilSemuaEstimasi();if(fetchedEstimasi.length>0){const combinedEstimasi=[...estimasiItems];fetchedEstimasi.forEach(fetchedItem=>{const existingIndex=combinedEstimasi.findIndex(item=>item.kodePart===fetchedItem.kodePart);if(existingIndex>-1){combinedEstimasi[existingIndex]={...combinedEstimasi[existingIndex],...fetchedItem}}else{combinedEstimasi.push(fetchedItem)}});estimasiItems=combinedEstimasi;saveEstimasiToLocalStorage();renderEstimasiTable();console.log('Estimation data successfully merged and re-rendered from Blogger.')}else{console.log('No new estimation data from Blogger. Using existing local data.');renderEstimasiTable()}}catch(error){console.error("Failed to fetch estimation data from Blogger:",error);renderEstimasiTable()}});closeEstimasiModalBtn.addEventListener('click',function(){console.log('Close main modal clicked. Modal classList BEFORE:',estimasiModal.classList.value);estimasiModal.classList.add('hidden');document.body.classList.remove('modal-open');console.log('Modal classList AFTER add hidden:',estimasiModal.classList.value)});estimasiModal.addEventListener('click',function(e){if(e.target===estimasiModal){console.log('Overlay clicked. Modal classList BEFORE:',estimasiModal.classList.value);estimasiModal.classList.add('hidden');document.body.classList.remove('modal-open');console.log('Modal classList AFTER add hidden:',estimasiModal.classList.value)}});downloadPdfBtn.addEventListener('click',generatePdf);openKirimEstimasiModalBtn.addEventListener('click',function(){if(estimasiItems.length===0){showMessageBox('Tidak ada item dalam estimasi untuk dikirim.');return}
kirimEstimasiModal.classList.remove('hidden')});closeKirimEstimasiModalBtn.addEventListener('click',function(){kirimEstimasiModal.classList.add('hidden')});kirimEstimasiModal.addEventListener('click',function(e){if(e.target===kirimEstimasiModal){kirimEstimasiModal.classList.add('hidden')}});estimasiForm.addEventListener('submit',function(e){e.preventDefault();const nama=document.getElementById('namaPengirim').value;const noHandphone=document.getElementById('noHandphone').value;const email=document.getElementById('emailPengirim').value;showMessageBox(`Estimasi berhasil dikirim oleh ${nama} (${email}, ${noHandphone})!`);console.log('Estimasi dikirim:',{items:estimasiItems,nama:nama,noHandphone:noHandphone,email:email});kirimEstimasiModal.classList.add('hidden');estimasiModal.classList.add('hidden');document.body.classList.remove('modal-open')})}else{console.warn('WARNING: Some modal elements are missing even though the open button exists. Check IDs and HTML structure.')}}else{console.log('INFO: Estimasi modal button not found. Modal functionality will not be initialized on this page.')}
async function ambilSemuaEstimasi(){console.log("Starting estimation data fetch from Blogger...");const url="/feeds/posts/default/-/estimasi?alt=json&max-results=50";let estimasiGabungan=[];try{const res=await fetch(url);if(!res.ok){throw new Error(`HTTP error! status: ${res.status}`)}
const json=await res.json();const entries=json.feed.entry||[];const parser=new DOMParser();for(const entry of entries){const htmlContent=entry.content?.$t;if(htmlContent){const docFromHtml=parser.parseFromString(htmlContent,'text/html');const scriptNode=docFromHtml.querySelector("script.data-estimasi[type='application/json']");if(scriptNode&&scriptNode.textContent){try{const data=JSON.parse(scriptNode.textContent);if(Array.isArray(data)){estimasiGabungan.push(...data);console.log(`Successfully parsed data from post: ${entry.title?.$t}`)}else{console.warn(`Estimation data in post "${entry.title?.$t}" is not an array. Skipping.`)}}catch(e){console.warn(`Failed to parse JSON in post "${entry.title?.$t}":`,e)}}else{console.log(`No script.data-estimasi found in post: ${entry.title?.$t}`)}}else{console.log(`Empty HTML content for post: ${entry.title?.$t}`)}}
console.log(`Estimation data fetch complete. Total items: ${estimasiGabungan.length}`)}catch(error){console.error("Error fetching estimation data from Blogger:",error)}
return estimasiGabungan}
window.updateEstimasiBadges=renderEstimasiTable;window.addEstimasiItem=function(item){addEstimasiItem(item,!0)};window.getEstimasiItems=function(){return[...estimasiItems]};window.clearEstimasi=function(){estimasiItems=[];saveEstimasiToLocalStorage();renderEstimasiTable()};window.loadContentForUrl=loadContentForUrl;window.postMap={};try{const cached=localStorage.getItem('cachedPostMap');if(cached){window.postMap=JSON.parse(cached);console.log("‚úÖ Loaded postMap from localStorage:",window.postMap)}}catch(e){console.error("‚ùå Error loading postMap from localStorage:",e);window.postMap={}}
function populatePostMap(){return new Promise(resolve=>{const postMappingContainer=document.getElementById('postMappingHidden');console.log("Starting populatePostMap function...");if(postMappingContainer){console.log("Content of #postMappingHidden:",postMappingContainer.innerHTML);const links=postMappingContainer.querySelectorAll('a');console.log(`Found ${links.length} <a> tags in #postMappingHidden.`);links.forEach(link=>{const title=link?.textContent?.trim();const url=link?.href;if(title&&url){const sanitizedTitle=title.toLowerCase().trim().replace(/\s+/g,'');window.postMap[sanitizedTitle]=url;console.log(`‚úÖ Mapped Post: Original Title from Blogger: "${title}" -> Sanitized Key: "${sanitizedTitle}" -> URL: "${url}"`)}else{console.warn(`‚ö†Ô∏è Skipping link due to missing title or URL: TextContent="${link?.textContent}", Href="${link?.href}"`)}});console.log("Final window.postMap content after populating from Blogger:");console.table(window.postMap);localStorage.setItem('cachedPostMap',JSON.stringify(window.postMap));console.log("‚úÖ Saved postMap to localStorage.");resolve()}else{console.warn("‚ùå #postMappingHidden container not found. This widget should be present on the index page.");const posts=document.querySelectorAll('.post');console.log(`Found ${posts.length} .post articles (fallback).`);posts.forEach(post=>{const titleElement=post.querySelector('h1 a');const title=titleElement?.textContent?.trim();const url=titleElement?.href;if(title&&url){const sanitizedTitle=title.toLowerCase().trim().replace(/\s+/g,'');window.postMap[sanitizedTitle]=url;console.log(`‚úÖ Mapped Post (Fallback): Original Title from Blogger: "${title}" -> Sanitized Key: "${sanitizedTitle}" -> URL: "${url}"`)}else{console.warn(`‚ö†Ô∏è Skipping fallback post due to missing title or URL: TitleElementText="${titleElement?.textContent}", Href="${titleElement?.href}"`)}});console.log("Final window.postMap content after populating from visible .post elements (fallback):");console.table(window.postMap);localStorage.setItem('cachedPostMap',JSON.stringify(window.postMap));console.log("‚úÖ Saved postMap (fallback) to localStorage.");resolve()}})}
populatePostMap().then(()=>{function resolveFigLink(item){const slug=item.judul_artikel?.toLowerCase().trim().replace(/\s+/g,'');if(window.postMap?.[slug])return window.postMap[slug];const currentYear=new Date().getFullYear();const currentMonth=(new Date().getMonth()+1).toString().padStart(2,'0');return `/${currentYear}/${currentMonth}/${slug}.html`}
function titleCase(text){if(!text)return'';return text.toLowerCase().split(' ').map(word=>word.charAt(0).toUpperCase()+word.slice(1)).join(' ')}
function renderFigResult(item){const link=resolveFigLink(item);const deskripsi=titleCase(item.deskripsi?.trim()||'');let html=`
          <div class="border border-gray-200 rounded-lg p-3 bg-white shadow-sm text-sm space-y-1">
            <h3 class="font-semibold text-blue-700">
              <a href="#" onclick="event.preventDefault(); window.loadContentForUrl('${link}');" class="hover:underline" data-preload-url="${link}">
                ${item.judul_artikel || 'Judul tidak tersedia'}
              </a>
            </h3>
            <p><strong>Kode Part:</strong><span class="bg-gray-100 px-2 py-0.5 rounded font-mono">${item.kodepart || 'N/A'}</span></p>`;if(deskripsi){html+=`<p><strong>Deskripsi:</strong> ${deskripsi}</p>`}
html+=`</div>`;return html}
window.jalankanPencarianFigSidebar=function(query){const hasilContainer=document.getElementById("searchOnlyContent");if(!hasilContainer){console.warn("‚ùå Kontainer #searchOnlyContent tidak ditemukan.");return}
hasilContainer.classList.remove("hidden");if(!query){hasilContainer.innerHTML=`<p class="text-gray-600 text-center">Masukkan kata kunci pada kolom pencarian untuk mencari kode part.</p>`;return}
hasilContainer.innerHTML=`
          <div class="text-sm text-gray-600 text-center mb-3">‚è≥ Mencari <strong>${query}</strong>...</div>`;const sheetURL="https://opensheet.elk.sh/1AlEA83WkT1UyXnnbPBxbXgPhdNUiCP_yarCIk_RhN5o/PartMaster";fetch(sheetURL).then(res=>{if(!res.ok){if(res.status===400){throw new Error(`Gagal ambil Sheet: ${res.status}. Pastikan Google Sheet Anda diatur untuk "Anyone with the link can view" dan ID Spreadsheet serta nama Sheet sudah benar.`)}else{throw new Error(`Gagal ambil Sheet: ${res.status}`)}}
return res.json()}).then(data=>{const hasil=data.filter(row=>{const q=query.toUpperCase();const kp=row.kodepart?.toUpperCase()||"";const ja=row.judul_artikel?.toUpperCase()||"";const ds=row.deskripsi?.toUpperCase()||"";return kp.includes(q)||ja.includes(q)||ds.includes(q)});if(hasil.length===0){hasilContainer.innerHTML=`
                <div class="bg-red-50 border border-red-200 rounded p-3 text-red-600 text-sm">
                  ‚ùå Tidak ditemukan hasil untuk <strong>${query}</strong>
                </div>`}else{hasilContainer.innerHTML=`<div class="space-y-4">
                ${hasil.map(renderFigResult).join('')}
              </div>`;hasilContainer.querySelectorAll('a[data-preload-url]').forEach(link=>{const urlToPreload=link.getAttribute('data-preload-url');if(urlToPreload){link.addEventListener('mouseenter',()=>preloadContent(urlToPreload))}})}}).catch(err=>{console.error("‚ö†Ô∏è Fetch gagal:",err);hasilContainer.innerHTML=`
              <div class="bg-red-100 border border-400 text-red-700 px-3 py-2 rounded">
                ‚ö†Ô∏è Gagal memuat data Sheet. (${err.message})
              </div>`})};const sidebarForm=document.getElementById('sidebarSearchForm');const sidebarInput=document.getElementById('sidebarSearchInput');sidebarForm?.addEventListener('submit',function(e){e.preventDefault();const query=sidebarInput?.value?.trim()?.toUpperCase();if(query)window.jalankanPencarianFigSidebar(query);})});function initializeLazyLoading(){const lazyImages=document.querySelectorAll('img.lazyload-img[data-src]');if('IntersectionObserver' in window){const lazyLoadObserver=new IntersectionObserver((entries,observer)=>{entries.forEach(entry=>{if(entry.isIntersecting){const img=entry.target;const dataSrc=img.getAttribute('data-src');if(dataSrc){img.src=dataSrc;console.log(`üìå Gambar terlihat: ${img.src}`);img.removeAttribute('data-src');img.classList.remove('lazyload-img');observer.unobserve(img)}}})},{rootMargin:'0px 0px 100px 0px',threshold:0.01});lazyImages.forEach(img=>{lazyLoadObserver.observe(img)});console.log(`Initialized IntersectionObserver for ${lazyImages.length} lazy images.`)}else{console.warn('IntersectionObserver not supported. All images will be loaded immediately.');lazyImages.forEach(img=>{const dataSrc=img.getAttribute('data-src');if(dataSrc){img.src=dataSrc;img.removeAttribute('data-src');img.classList.remove('lazyload-img')}})}}
function rehydrateLazyImages(){document.querySelectorAll('img.lazyload-img[data-src]').forEach(img=>{const rect=img.getBoundingClientRect();if(rect.top<window.innerHeight&&rect.bottom>0&&rect.left<window.innerWidth&&rect.right>0){const dataSrc=img.getAttribute('data-src');if(dataSrc){img.src=dataSrc;img.removeAttribute('data-src');img.classList.remove('lazyload-img');console.log(`‚úÖ Gambar dimuat manual: ${dataSrc}`)}}})}
function setupInternalLinkListeners(){document.querySelectorAll('a').forEach(link=>{if(link.href.startsWith(window.location.origin)&&!link.dataset.noSpa&&!link.onclick){link.removeEventListener('click',handleInternalLinkClick);link.addEventListener('click',handleInternalLinkClick)}});console.log('Internal link listeners re-setup.')}
function handleInternalLinkClick(e){if(e.target.closest('.dropdown-toggle')){return}
if(e.target.tagName==='A'&&e.target.href.startsWith(window.location.origin)&&!e.target.href.includes('#')&&!e.target.href.startsWith('mailto:')&&!e.target.href.startsWith('tel:')){e.preventDefault();const url=e.target.getAttribute('href');window.loadContentForUrl(url)}}
function refreshSPAContent(){console.log('üîÑ refreshing SPA content...');initializeLazyLoading();rehydrateLazyImages();setupInternalLinkListeners()}
document.addEventListener('DOMContentLoaded',function(){console.log('DOM Content Loaded. Initial pageType:','<data:blog.pageType/>');const currentPath=window.location.pathname+window.location.search;loadContentForUrl(currentPath,!1).then(()=>{refreshSPAContent()})});window.rehydrateLazyImages=rehydrateLazyImages;window.refreshSPAContent=refreshSPAContent})